
{
    "type":"object",
    "properties":{
        "single-selection-1178:408:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"2.1 Buildings"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"2.1 Buildings"
            }
        },
        "double-input-1177:1736:1247":{
            "type":"number",
            "default":0.001,
            "description":"Enter Description",
            "example":0.001
        },
        "string-input-1177:1534:349":{
            "type":"string",
            "default":"dhg_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example":"dhg_emissions-CO2e"
        },
        "single-selection-1178:1211:653":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Java"
                }
            },
            "description":"Select code language to use",
            "example":{
                "variable_value":"Java"
            }
        },
        "slider-input-524:506":{
            "type":"object",
            "properties":{
                "double":{
                    "type":"number",
                    "default":4.0
                }
            },
            "description":"Description of lever",
            "example":{
                "double":4.0
            }
        },
        "boolean-input-1177:1770:359":{
            "type":"boolean",
            "default":"false",
            "description":"Remove columns used in the calculation",
            "example":false
        },
        "data-type-900:520:357":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"historical"
                    }
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":[
                    "historical",
                    "projection"
                ]
            }
        },
        "single-selection-1177:1536:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1178:1211:1182:349":{
            "type":"string",
            "default":"emissions_total",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"emissions_total"
        },
        "string-input-1177:1708:357":{
            "type":"string",
            "default":".*emissions-(...).*\\[Mt\\]",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":".*emissions-(...).*\\[Mt\\]"
        },
        "string-input-1178:1211:1166:460":{
            "type":"string",
            "default":"%",
            "description":"New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example":"%"
        },
        "string-input-1177:1708:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "string-input-1177:1526:357":{
            "type":"string",
            "default":"ind_emissions-..._(.*)\\[MtCO2e\\]*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"ind_emissions-..._(.*)\\[MtCO2e\\]*"
        },
        "string-input-1177:1526:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "string-input-1177:1736:1246":{
            "type":"string",
            "default":"GtC/yr",
            "description":"Enter Description",
            "example":"GtC/yr"
        },
        "string-input-1177:1736:1245":{
            "type":"string",
            "default":".*\\[MtC/yr\\].*",
            "description":"Enter Description",
            "example":".*\\[MtC/yr\\].*"
        },
        "string-input-1178:1211:1182:354":{
            "type":"string",
            "default":"unit",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"unit"
        },
        "string-input-1178:1211:1182:357":{
            "type":"string",
            "default":".*emissions.*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":".*emissions.*"
        },
        "single-selection-900:520:355":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"climate"
                }
            },
            "description":"Module Selection",
            "example":{
                "variable_value":"climate"
            }
        },
        "column-filter-1177:1526:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"ind_emissions-CH4_steel[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "ind_emissions-CH4_steel[MtCO2e]",
                    "ind_emissions-CH4_cement[MtCO2e]",
                    "ind_emissions-CH4_paper[MtCO2e]",
                    "ind_emissions-CH4_chem[MtCO2e]",
                    "ind_emissions-CH4_aluminium[MtCO2e]",
                    "ind_emissions-CH4_glass[MtCO2e]",
                    "ind_emissions-CH4_lime[MtCO2e]",
                    "ind_emissions-CH4_copper[MtCO2e]",
                    "ind_emissions-CH4_tra-equip[MtCO2e]",
                    "ind_emissions-CH4_fbt[MtCO2e]",
                    "ind_emissions-CH4_textiles[MtCO2e]",
                    "ind_emissions-CH4_mae[MtCO2e]",
                    "ind_emissions-CH4_wwp[MtCO2e]",
                    "ind_emissions-CH4_ois[MtCO2e]",
                    "ind_emissions-N2O_steel[MtCO2e]",
                    "ind_emissions-N2O_cement[MtCO2e]",
                    "ind_emissions-N2O_paper[MtCO2e]",
                    "ind_emissions-N2O_chem[MtCO2e]",
                    "ind_emissions-N2O_aluminium[MtCO2e]",
                    "ind_emissions-N2O_glass[MtCO2e]",
                    "ind_emissions-N2O_lime[MtCO2e]",
                    "ind_emissions-N2O_copper[MtCO2e]",
                    "ind_emissions-N2O_tra-equip[MtCO2e]",
                    "ind_emissions-N2O_fbt[MtCO2e]",
                    "ind_emissions-N2O_textiles[MtCO2e]",
                    "ind_emissions-N2O_mae[MtCO2e]",
                    "ind_emissions-N2O_wwp[MtCO2e]",
                    "ind_emissions-N2O_ois[MtCO2e]",
                    "ind_emissions-CO2_steel[MtCO2e]",
                    "ind_emissions-CO2_cement[MtCO2e]",
                    "ind_emissions-CO2_chem[MtCO2e]",
                    "ind_emissions-CO2_paper[MtCO2e]",
                    "ind_emissions-CO2_aluminium[MtCO2e]",
                    "ind_emissions-CO2_glass[MtCO2e]",
                    "ind_emissions-CO2_lime[MtCO2e]",
                    "ind_emissions-CO2_tra-equip[MtCO2e]",
                    "ind_emissions-CO2_fbt[MtCO2e]",
                    "ind_emissions-CO2_textiles[MtCO2e]",
                    "ind_emissions-CO2_mae[MtCO2e]",
                    "ind_emissions-CO2_wwp[MtCO2e]",
                    "ind_emissions-CO2_ois[MtCO2e]",
                    "ind_emissions-CO2_copper[MtCO2e]"
                ]
            }
        },
        "single-selection-1178:395":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"1.4 Climate Emissions"
                }
            },
            "description":"Name of the current module",
            "example":{
                "variable_value":"1.4 Climate Emissions"
            }
        },
        "string-input-1177:1530:349":{
            "type":"string",
            "default":"bld_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example":"bld_emissions-CO2e"
        },
        "multiple-selection-1199:131":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"CO2"
                    }
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":[
                    "CO2",
                    "N2O",
                    "CH4"
                ]
            }
        },
        "single-selection-1178:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"2.3 District Heating"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"2.3 District Heating"
            }
        },
        "single-selection-1177:1587:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1177:1526:349":{
            "type":"string",
            "default":"ind_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example":"ind_emissions-CO2e"
        },
        "column-filter-1177:1530:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"bld_emissions-CO2_gas-ff-natural[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "bld_emissions-CO2_gas-ff-natural[MtCO2e]",
                    "bld_emissions-N2O_gas-ff-natural[MtCO2e]",
                    "bld_emissions-CH4_gas-ff-natural[MtCO2e]",
                    "bld_emissions-CO2_heat-ambient[MtCO2e]",
                    "bld_emissions-N2O_heat-ambient[MtCO2e]",
                    "bld_emissions-CH4_heat-ambient[MtCO2e]",
                    "bld_emissions-CO2_heat-geothermal[MtCO2e]",
                    "bld_emissions-N2O_heat-geothermal[MtCO2e]",
                    "bld_emissions-CH4_heat-geothermal[MtCO2e]",
                    "bld_emissions-CO2_heat-solar[MtCO2e]",
                    "bld_emissions-N2O_heat-solar[MtCO2e]",
                    "bld_emissions-CH4_heat-solar[MtCO2e]",
                    "bld_emissions-CO2_liquid-ff-heatingoil[MtCO2e]",
                    "bld_emissions-N2O_liquid-ff-heatingoil[MtCO2e]",
                    "bld_emissions-CH4_liquid-ff-heatingoil[MtCO2e]",
                    "bld_emissions-CO2_solid-ff-coal[MtCO2e]",
                    "bld_emissions-N2O_solid-ff-coal[MtCO2e]",
                    "bld_emissions-CH4_solid-ff-coal[MtCO2e]",
                    "bld_emissions-CH4_solid-bio[MtCO2e]",
                    "bld_emissions-CO2_solid-bio[MtCO2e]",
                    "bld_emissions-N2O_solid-bio[MtCO2e]",
                    "bld_emissions-CO2_non-residential_education[MtCO2e]",
                    "bld_emissions-N2O_non-residential_education[MtCO2e]",
                    "bld_emissions-CH4_non-residential_education[MtCO2e]",
                    "bld_emissions-CO2_non-residential_health[MtCO2e]",
                    "bld_emissions-N2O_non-residential_health[MtCO2e]",
                    "bld_emissions-CH4_non-residential_health[MtCO2e]",
                    "bld_emissions-CO2_non-residential_hotels[MtCO2e]",
                    "bld_emissions-N2O_non-residential_hotels[MtCO2e]",
                    "bld_emissions-CH4_non-residential_hotels[MtCO2e]",
                    "bld_emissions-CO2_non-residential_offices[MtCO2e]",
                    "bld_emissions-N2O_non-residential_offices[MtCO2e]",
                    "bld_emissions-CH4_non-residential_offices[MtCO2e]",
                    "bld_emissions-CO2_non-residential_other[MtCO2e]",
                    "bld_emissions-N2O_non-residential_other[MtCO2e]",
                    "bld_emissions-CH4_non-residential_other[MtCO2e]",
                    "bld_emissions-CO2_non-residential_trade[MtCO2e]",
                    "bld_emissions-N2O_non-residential_trade[MtCO2e]",
                    "bld_emissions-CH4_non-residential_trade[MtCO2e]",
                    "bld_emissions-CO2_residential_mfh[MtCO2e]",
                    "bld_emissions-N2O_residential_mfh[MtCO2e]",
                    "bld_emissions-CH4_residential_mfh[MtCO2e]",
                    "bld_emissions-CO2_residential_sfh[MtCO2e]",
                    "bld_emissions-N2O_residential_sfh[MtCO2e]",
                    "bld_emissions-CH4_residential_sfh[MtCO2e]"
                ]
            }
        },
        "column-filter-1177:1503:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"amm_emissions-CO2_ammonia[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "amm_emissions-CO2_ammonia[MtCO2e]",
                    "amm_emissions-CH4_ammonia[MtCO2e]",
                    "amm_emissions-N2O_ammonia[MtCO2e]"
                ]
            }
        },
        "single-selection-1177:1532:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "double-input-1177:1247":{
            "type":"number",
            "default":1000.0,
            "description":"Enter Description",
            "example":1000.0
        },
        "single-selection-1177:1266:1151:653":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Java"
                }
            },
            "description":"Select code language to use",
            "example":{
                "variable_value":"Java"
            }
        },
        "single-selection-1210:307:314":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"fts"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"fts"
            }
        },
        "string-input-1177:1530:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "column-filter-1177:1253":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"clm_emissions-CO2e[Gt]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "clm_emissions-CO2e[Gt]"
                ]
            }
        },
        "boolean-input-1177:1502:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "string-input-1177:1530:357":{
            "type":"string",
            "default":"bld_emissions-..._(.*)\\[MtCO2e\\]*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"bld_emissions-..._(.*)\\[MtCO2e\\]*"
        },
        "boolean-input-1178:1211:1182:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "data-type-1210:520:357":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"historical"
                    }
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":[
                    "historical",
                    "projection"
                ]
            }
        },
        "column-filter-1178:1211:1166:652":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"Sum(cal_product_emissions_total[%])"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "Sum(cal_product_emissions_total[%])",
                    "Sum(cal_product_energy_rail[%])",
                    "Sum(cal_product_energy_road[%])",
                    "Sum(cal_product_energy_aviation-international[%])",
                    "Sum(cal_product_energy_aviation-domestic[%])",
                    "Sum(cal_product_activity_aviation[%])",
                    "Sum(cal_product_activity_road-private[%])",
                    "Sum(cal_product_activity_road-public[%])",
                    "Sum(cal_product_activity_HDV[%])",
                    "Sum(cal_product_activity_IWW[%])",
                    "Sum(cal_product_activity_rail-passenger[%])",
                    "Sum(cal_product_activity_rail-freight[%])"
                ]
            }
        },
        "string-input-1177:1534:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "single-selection-1178:1211:1182:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1177:1719:1245":{
            "type":"string",
            "default":".*\\[MtC/yr\\]",
            "description":"Enter Description",
            "example":".*\\[MtC/yr\\]"
        },
        "string-input-1177:1534:357":{
            "type":"string",
            "default":"dhg_emissions-..._(.*)\\[MtCO2e\\]*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"dhg_emissions-..._(.*)\\[MtCO2e\\]*"
        },
        "single-selection-1178:1211:659:661":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"PARALLEL_OP"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"PARALLEL_OP"
            }
        },
        "string-input-1177:1719:1246":{
            "type":"string",
            "default":"MtCO2e",
            "description":"Enter Description",
            "example":"MtCO2e"
        },
        "single-selection-1178:1205:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"2.2 Transport"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"2.2 Transport"
            }
        },
        "boolean-input-1177:1536:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "column-filter-1177:1708:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"bld_emissions-CH4_gas-ff-natural[Mt]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "bld_emissions-CH4_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_heat-ambient[Mt]",
                    "bld_emissions-CH4_heat-geothermal[Mt]",
                    "bld_emissions-CH4_heat-solar[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_solid-bio[Mt]",
                    "bld_emissions-CH4_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_heat-ambient[Mt]",
                    "bld_emissions-CO2_heat-geothermal[Mt]",
                    "bld_emissions-CO2_heat-solar[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_solid-bio[Mt]",
                    "bld_emissions-CO2_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_heat-ambient[Mt]",
                    "bld_emissions-N2O_heat-geothermal[Mt]",
                    "bld_emissions-N2O_heat-solar[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_solid-bio[Mt]",
                    "bld_emissions-N2O_solid-ff-coal[Mt]",
                    "tra_emissions-CH4_freight_HDV[Mt]",
                    "tra_emissions-CH4_freight_IWW[Mt]",
                    "tra_emissions-CH4_freight_aviation[Mt]",
                    "tra_emissions-CH4_freight_marine[Mt]",
                    "tra_emissions-CH4_freight_rail[Mt]",
                    "tra_emissions-CH4_passenger_2W[Mt]",
                    "tra_emissions-CH4_passenger_LDV[Mt]",
                    "tra_emissions-CH4_passenger_aviation[Mt]",
                    "tra_emissions-CH4_passenger_bus[Mt]",
                    "tra_emissions-CH4_passenger_metro-tram[Mt]",
                    "tra_emissions-CH4_passenger_rail[Mt]",
                    "tra_emissions-CO2_freight_HDV[Mt]",
                    "tra_emissions-CO2_freight_IWW[Mt]",
                    "tra_emissions-CO2_freight_aviation[Mt]",
                    "tra_emissions-CO2_freight_marine[Mt]",
                    "tra_emissions-CO2_freight_rail[Mt]",
                    "tra_emissions-CO2_passenger_2W[Mt]",
                    "tra_emissions-CO2_passenger_LDV[Mt]",
                    "tra_emissions-CO2_passenger_aviation[Mt]",
                    "tra_emissions-CO2_passenger_bus[Mt]",
                    "tra_emissions-CO2_passenger_metro-tram[Mt]",
                    "tra_emissions-CO2_passenger_rail[Mt]",
                    "tra_emissions-N2O_freight_HDV[Mt]",
                    "tra_emissions-N2O_freight_IWW[Mt]",
                    "tra_emissions-N2O_freight_aviation[Mt]",
                    "tra_emissions-N2O_freight_marine[Mt]",
                    "tra_emissions-N2O_freight_rail[Mt]",
                    "tra_emissions-N2O_passenger_2W[Mt]",
                    "tra_emissions-N2O_passenger_LDV[Mt]",
                    "tra_emissions-N2O_passenger_aviation[Mt]",
                    "tra_emissions-N2O_passenger_bus[Mt]",
                    "tra_emissions-N2O_passenger_metro-tram[Mt]",
                    "tra_emissions-N2O_passenger_rail[Mt]",
                    "dhg_emissions-CH4_gas-ff-natural[Mt]",
                    "dhg_emissions-CH4_heat-ambient[Mt]",
                    "dhg_emissions-CH4_heat-geothermal[Mt]",
                    "dhg_emissions-CH4_heat-solar[Mt]",
                    "dhg_emissions-CH4_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions-CH4_solid-bio[Mt]",
                    "dhg_emissions-CH4_solid-ff-coal[Mt]",
                    "dhg_emissions-CO2_gas-ff-natural[Mt]",
                    "dhg_emissions-CO2_heat-ambient[Mt]",
                    "dhg_emissions-CO2_heat-geothermal[Mt]",
                    "dhg_emissions-CO2_heat-solar[Mt]",
                    "dhg_emissions-CO2_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions-CO2_solid-bio[Mt]",
                    "dhg_emissions-CO2_solid-ff-coal[Mt]",
                    "dhg_emissions-N2O_gas-ff-natural[Mt]",
                    "dhg_emissions-N2O_heat-ambient[Mt]",
                    "dhg_emissions-N2O_heat-geothermal[Mt]",
                    "dhg_emissions-N2O_heat-solar[Mt]",
                    "dhg_emissions-N2O_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions-N2O_solid-bio[Mt]",
                    "dhg_emissions-N2O_solid-ff-coal[Mt]",
                    "ind_emissions-CH4_aluminium[Mt]",
                    "ind_emissions-CH4_cement[Mt]",
                    "ind_emissions-CH4_chem[Mt]",
                    "ind_emissions-CH4_copper[Mt]",
                    "ind_emissions-CH4_fbt[Mt]",
                    "ind_emissions-CH4_glass[Mt]",
                    "ind_emissions-CH4_lime[Mt]",
                    "ind_emissions-CH4_mae[Mt]",
                    "ind_emissions-CH4_ois[Mt]",
                    "ind_emissions-CH4_paper[Mt]",
                    "ind_emissions-CH4_steel[Mt]",
                    "ind_emissions-CH4_textiles[Mt]",
                    "ind_emissions-CH4_tra-equip[Mt]",
                    "ind_emissions-CH4_wwp[Mt]",
                    "ind_emissions-CO2_aluminium[Mt]",
                    "ind_emissions-CO2_cement[Mt]",
                    "ind_emissions-CO2_chem[Mt]",
                    "ind_emissions-CO2_copper[Mt]",
                    "ind_emissions-CO2_fbt[Mt]",
                    "ind_emissions-CO2_glass[Mt]",
                    "ind_emissions-CO2_lime[Mt]",
                    "ind_emissions-CO2_mae[Mt]",
                    "ind_emissions-CO2_ois[Mt]",
                    "ind_emissions-CO2_paper[Mt]",
                    "ind_emissions-CO2_steel[Mt]",
                    "ind_emissions-CO2_textiles[Mt]",
                    "ind_emissions-CO2_tra-equip[Mt]",
                    "ind_emissions-CO2_wwp[Mt]",
                    "ind_emissions-N2O_aluminium[Mt]",
                    "ind_emissions-N2O_cement[Mt]",
                    "ind_emissions-N2O_chem[Mt]",
                    "ind_emissions-N2O_copper[Mt]",
                    "ind_emissions-N2O_fbt[Mt]",
                    "ind_emissions-N2O_glass[Mt]",
                    "ind_emissions-N2O_lime[Mt]",
                    "ind_emissions-N2O_mae[Mt]",
                    "ind_emissions-N2O_ois[Mt]",
                    "ind_emissions-N2O_paper[Mt]",
                    "ind_emissions-N2O_steel[Mt]",
                    "ind_emissions-N2O_textiles[Mt]",
                    "ind_emissions-N2O_tra-equip[Mt]",
                    "ind_emissions-N2O_wwp[Mt]",
                    "amm_emissions-CH4_ammonia[Mt]",
                    "amm_emissions-CO2_ammonia[Mt]",
                    "amm_emissions-N2O_ammonia[Mt]",
                    "lus_emissions-CO2_cropland-rem-cropland[Mt]",
                    "lus_emissions-CO2_forest-rem-forest[Mt]",
                    "lus_emissions-CO2_fst_afforestation[Mt]",
                    "lus_emissions-CO2_fst_csf[Mt]",
                    "lus_emissions-CO2_fst_deforestation[Mt]",
                    "lus_emissions-CO2_fst_hwp[Mt]",
                    "lus_emissions-CO2_grassland-rem-grassland[Mt]",
                    "lus_emissions-CO2_land-to-cropland[Mt]",
                    "lus_emissions-CO2_land-to-forest[Mt]",
                    "lus_emissions-CO2_land-to-grassland[Mt]",
                    "lus_emissions-CO2_land-to-other[Mt]",
                    "lus_emissions-CO2_land-to-settlement[Mt]",
                    "lus_emissions-CO2_land-to-wetland[Mt]",
                    "lus_emissions-CO2_other-rem-other[Mt]",
                    "lus_emissions-CO2_settlement-rem-settlement[Mt]",
                    "lus_emissions-CO2_wetland-rem-wetland[Mt]",
                    "agr_emissions-CH4_crop_burnt-residues[Mt]",
                    "agr_emissions-CH4_crop_rice[Mt]",
                    "agr_emissions-CH4_liv_enteric_abp_dairy-milk[Mt]",
                    "agr_emissions-CH4_liv_enteric_abp_hens-egg[Mt]",
                    "agr_emissions-CH4_liv_enteric_meat_bovine[Mt]",
                    "agr_emissions-CH4_liv_enteric_meat_oth-animals[Mt]",
                    "agr_emissions-CH4_liv_enteric_meat_pig[Mt]",
                    "agr_emissions-CH4_liv_enteric_meat_poultry[Mt]",
                    "agr_emissions-CH4_liv_enteric_meat_sheep[Mt]",
                    "agr_emissions-CH4_liv_treated_abp_dairy-milk[Mt]",
                    "agr_emissions-CH4_liv_treated_abp_hens-egg[Mt]",
                    "agr_emissions-CH4_liv_treated_meat_bovine[Mt]",
                    "agr_emissions-CH4_liv_treated_meat_oth-animals[Mt]",
                    "agr_emissions-CH4_liv_treated_meat_pig[Mt]",
                    "agr_emissions-CH4_liv_treated_meat_poultry[Mt]",
                    "agr_emissions-CH4_liv_treated_meat_sheep[Mt]",
                    "agr_emissions-N2O_crop_burnt-residues[Mt]",
                    "agr_emissions-N2O_crop_fertilizer[Mt]",
                    "agr_emissions-N2O_crop_soil-residues[Mt]",
                    "agr_emissions-N2O_liv_applied_abp_dairy-milk[Mt]",
                    "agr_emissions-N2O_liv_applied_abp_hens-egg[Mt]",
                    "agr_emissions-N2O_liv_applied_meat_bovine[Mt]",
                    "agr_emissions-N2O_liv_applied_meat_oth-animals[Mt]",
                    "agr_emissions-N2O_liv_applied_meat_pig[Mt]",
                    "agr_emissions-N2O_liv_applied_meat_poultry[Mt]",
                    "agr_emissions-N2O_liv_applied_meat_sheep[Mt]",
                    "agr_emissions-N2O_liv_pasture_abp_dairy-milk[Mt]",
                    "agr_emissions-N2O_liv_pasture_abp_hens-egg[Mt]",
                    "agr_emissions-N2O_liv_pasture_meat_bovine[Mt]",
                    "agr_emissions-N2O_liv_pasture_meat_oth-animals[Mt]",
                    "agr_emissions-N2O_liv_pasture_meat_pig[Mt]",
                    "agr_emissions-N2O_liv_pasture_meat_poultry[Mt]",
                    "agr_emissions-N2O_liv_pasture_meat_sheep[Mt]",
                    "agr_emissions-N2O_liv_treated_abp_dairy-milk[Mt]",
                    "agr_emissions-N2O_liv_treated_abp_hens-egg[Mt]",
                    "agr_emissions-N2O_liv_treated_meat_bovine[Mt]",
                    "agr_emissions-N2O_liv_treated_meat_oth-animals[Mt]",
                    "agr_emissions-N2O_liv_treated_meat_pig[Mt]",
                    "agr_emissions-N2O_liv_treated_meat_poultry[Mt]",
                    "agr_emissions-N2O_liv_treated_meat_sheep[Mt]",
                    "agr_input-use_emissions-CO2_fuel[Mt]",
                    "agr_input-use_emissions-CO2_liming[Mt]",
                    "agr_input-use_emissions-CO2_urea[Mt]",
                    "bdy_emissions-CH4[Mt]",
                    "bdy_emissions-CO2[Mt]",
                    "bdy_emissions-N2O[Mt]",
                    "fos_emissions-CO2[Mt]",
                    "elc_emissions-CO2_fossil_total[Mt]"
                ]
            }
        },
        "single-selection-1177:1504:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1178:1211:1188":{
            "type":"string",
            "default":"2015",
            "description":"Enter Description",
            "example":"2015"
        },
        "single-selection-1177:1583:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "single-selection-1178:1208:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"0.2 Pathway Explorer"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"0.2 Pathway Explorer"
            }
        },
        "string-input-1177:1586:349":{
            "type":"string",
            "default":"world_cum_ems",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"world_cum_ems"
        },
        "boolean-input-1177:1532:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "boolean-input-1177:1266:1151:586":{
            "type":"boolean",
            "default":"false",
            "description":"Remove columns used in the calculation.",
            "example":false
        },
        "column-filter-1177:1588:1253":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"clm_emissions-CO2e_EU[Mt]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "clm_emissions-CO2e_EU[Mt]",
                    "clm_cum_emissions-CO2e_EU[Mt]"
                ]
            }
        },
        "single-selection-1177:1586:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "boolean-input-1177:1587:359":{
            "type":"boolean",
            "default":"false",
            "description":"Remove columns used in the calculation",
            "example":false
        },
        "string-input-1199:1309:1246":{
            "type":"string",
            "default":"Mt",
            "description":"Enter Description",
            "example":"Mt"
        },
        "string-input-1177:1586:357":{
            "type":"string",
            "default":".*ems_cum.*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":".*ems_cum.*"
        },
        "string-input-1199:1309:1245":{
            "type":"string",
            "default":"cal_clm.*",
            "description":"Enter Description",
            "example":"cal_clm.*"
        },
        "string-input-1177:1586:354":{
            "type":"string",
            "default":"GtC",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"GtC"
        },
        "string-input-900:520:343":{
            "type":"string",
            "default":"temp",
            "description":"the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example":"temp"
        },
        "single-selection-539:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"5.1 Electricity"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"5.1 Electricity"
            }
        },
        "boolean-input-1177:1526:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "single-selection-539:395":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"1.2 Climate"
                }
            },
            "description":"Name of the current module",
            "example":{
                "variable_value":"1.2 Climate"
            }
        },
        "string-input-1216:843":{
            "type":"string",
            "default":"Title",
            "description":"Enter Description",
            "example":"Title"
        },
        "string-input-1177:1246":{
            "type":"string",
            "default":"Mt",
            "description":"Enter Description",
            "example":"Mt"
        },
        "string-input-1177:1245":{
            "type":"string",
            "default":"clm_.*\\[Gt\\]",
            "description":"Enter Description",
            "example":"clm_.*\\[Gt\\]"
        },
        "double-input-1177:1764:1743:1247":{
            "type":"number",
            "default":1.0,
            "description":"Enter Description",
            "example":1.0
        },
        "single-selection-900:433:314":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"ots"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"ots"
            }
        },
        "single-selection-1194:433:314":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"fts"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"fts"
            }
        },
        "string-input-1177:1708:1296:357":{
            "type":"string",
            "default":".*SO2.*|dummy",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":".*SO2.*|dummy"
        },
        "string-input-1177:1266:1151:446":{
            "type":"string",
            "default":".*",
            "description":"Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example":".*"
        },
        "slider-input-524:406":{
            "type":"object",
            "properties":{
                "double":{
                    "type":"number",
                    "default":1.0
                }
            },
            "description":"Description of lever",
            "example":{
                "double":1.0
            }
        },
        "string-input-1177:1708:1296:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "string-input-1177:1266:1151:444":{
            "type":"string",
            "default":"cal_delta",
            "description":"Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example":"cal_delta"
        },
        "string-input-1177:1266:1151:445":{
            "type":"string",
            "default":".*",
            "description":"Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example":".*"
        },
        "column-filter-1199:1315:1253":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "double-input-1199:1309:1247":{
            "type":"number",
            "default":0.001,
            "description":"Enter Description",
            "example":0.001
        },
        "column-filter-1177:1502:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"bdy_emissions-CO2[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "bdy_emissions-CO2[MtCO2e]",
                    "bdy_emissions-CH4[MtCO2e]",
                    "bdy_emissions-N2O[MtCO2e]"
                ]
            }
        },
        "column-filter-1177:1583:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"lus_land_emissions-CO2_forest[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "lus_land_emissions-CO2_forest[MtCO2e]",
                    "lus_emissions-CO2_forest-rem-forest[MtCO2e]",
                    "lus_emissions-CO2_land-to-forest[MtCO2e]",
                    "lus_emissions-CO2_cropland-rem-cropland[MtCO2e]",
                    "lus_emissions-CO2_land-to-cropland[MtCO2e]",
                    "lus_emissions-CO2_grassland-rem-grassland[MtCO2e]",
                    "lus_emissions-CO2_land-to-grassland[MtCO2e]",
                    "lus_emissions-CO2_settlement-rem-settlement[MtCO2e]",
                    "lus_emissions-CO2_land-to-settlement[MtCO2e]",
                    "lus_emissions-CO2_wetland-rem-wetland[MtCO2e]",
                    "lus_emissions-CO2_land-to-wetland[MtCO2e]",
                    "lus_emissions-CO2_other-rem-other[MtCO2e]",
                    "lus_emissions-CO2_land-to-other[MtCO2e]",
                    "lus_emissions-CO2_fst_hwp[MtCO2e]",
                    "lus_emissions-CO2_fst_deforestation[MtCO2e]",
                    "lus_emissions-CO2_fst_afforestation[MtCO2e]",
                    "lus_emissions-CO2_fst_csf[MtCO2e]"
                ]
            }
        },
        "string-input-1177:1266:1164":{
            "type":"string",
            "default":"2015",
            "description":"Enter Description",
            "example":"2015"
        },
        "string-input-1210:520:343":{
            "type":"string",
            "default":"ems-after-2050",
            "description":"the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example":"ems-after-2050"
        },
        "column-filter-1177:1534:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"dhg_emissions-CO2_gas-ff-natural[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "dhg_emissions-CO2_gas-ff-natural[MtCO2e]",
                    "dhg_emissions-CH4_gas-ff-natural[MtCO2e]",
                    "dhg_emissions-N2O_gas-ff-natural[MtCO2e]",
                    "dhg_emissions-CO2_heat-ambient[MtCO2e]",
                    "dhg_emissions-CH4_heat-ambient[MtCO2e]",
                    "dhg_emissions-N2O_heat-ambient[MtCO2e]",
                    "dhg_emissions-CO2_heat-geothermal[MtCO2e]",
                    "dhg_emissions-CH4_heat-geothermal[MtCO2e]",
                    "dhg_emissions-N2O_heat-geothermal[MtCO2e]",
                    "dhg_emissions-CO2_heat-solar[MtCO2e]",
                    "dhg_emissions-CH4_heat-solar[MtCO2e]",
                    "dhg_emissions-N2O_heat-solar[MtCO2e]",
                    "dhg_emissions-CO2_liquid-ff-heatingoil[MtCO2e]",
                    "dhg_emissions-CH4_liquid-ff-heatingoil[MtCO2e]",
                    "dhg_emissions-N2O_liquid-ff-heatingoil[MtCO2e]",
                    "dhg_emissions-CO2_solid-ff-coal[MtCO2e]",
                    "dhg_emissions-CH4_solid-ff-coal[MtCO2e]",
                    "dhg_emissions-N2O_solid-ff-coal[MtCO2e]"
                ]
            }
        },
        "string-input-1177:1266:1163":{
            "type":"string",
            "default":"1990",
            "description":"Enter Description",
            "example":"1990"
        },
        "single-selection-1178:1191:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"5.1 Electricity"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"5.1 Electricity"
            }
        },
        "single-selection-1178:1211:1166:463":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Division 2/1"
                }
            },
            "description":"Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example":{
                "variable_value":"Division 2/1"
            }
        },
        "double-input-1177:1769:1743:1247":{
            "type":"number",
            "default":1.0,
            "description":"Enter Description",
            "example":1.0
        },
        "double-input-1177:1719:1254":{
            "type":"string",
            "default":"3.666667",
            "description":"Enter Description",
            "example":"3.666667"
        },
        "multiple-selection-1199:1323:128":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"CRF1A1A - Fuel combustion in public electricity and heat production"
                    }
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":[
                    "CRF1A1A - Fuel combustion in public electricity and heat production",
                    "CRF1A1B - Fuel combustion in petroleum refining",
                    "CRF1A1C - Fuel combustion in manufacture of solid fuels and other energy industries",
                    "CRF1A2 - Fuel combustion in manufacturing industries and construction",
                    "CRF1A3 - Fuel combustion in transport",
                    "CRF1A4A - Fuel combustion in commercial and institutional sector",
                    "CRF1A4B - Fuel combustion by households",
                    "CRF1A4C - Fuel combustion in agriculture, forestry and fishing",
                    "CRF1B - Fuels - fugitive emissions",
                    "CRF1C - Transport and storage of CO2 (memo item)",
                    "CRF1D1 - International bunkers (memo item)",
                    "CRF1D2 - Multilateral operations (memo item)",
                    "CRF2 - Industrial processes and product use",
                    "CRF3 - Agriculture",
                    "CRF4 - Land use, land use change, and forestry (LULUCF)",
                    "CRF5B2 - Anaerobic digestion at biogas facilities"
                ]
            }
        },
        "string-input-1177:1536:357":{
            "type":"string",
            "default":"tra_emissions-..._(.*)\\[MtCO2e\\]*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"tra_emissions-..._(.*)\\[MtCO2e\\]*"
        },
        "string-input-1177:1266:1146:444":{
            "type":"string",
            "default":"prefix",
            "description":"Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example":"prefix"
        },
        "string-input-1177:1266:1146:445":{
            "type":"string",
            "default":"cal_rate_(.*)\\[%\\]",
            "description":"Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example":"cal_rate_(.*)\\[%\\]"
        },
        "single-selection-1177:1266:1151:659:661":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"PARALLEL_OP"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"PARALLEL_OP"
            }
        },
        "string-input-1177:1266:1146:446":{
            "type":"string",
            "default":".*",
            "description":"Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example":".*"
        },
        "string-input-1177:1536:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "string-input-1177:1266:1151:460":{
            "type":"string",
            "default":"unit",
            "description":"New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example":"unit"
        },
        "column-filter-1177:1266:1146:652":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "single-selection-900:307:314":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"fts"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"fts"
            }
        },
        "string-input-1177:1587:357":{
            "type":"string",
            "default":".*ems_annual.*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":".*ems_annual.*"
        },
        "string-input-1177:1536:349":{
            "type":"string",
            "default":"tra_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example":"tra_emissions-CO2e"
        },
        "boolean-input-1177:1266:1146:586":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation.",
            "example":true
        },
        "single-selection-1177:1503:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "single-selection-1178:1197:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"4.1 Land-use"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"4.1 Land-use"
            }
        },
        "single-selection-1210:520:355":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"climate"
                }
            },
            "description":"Module Selection",
            "example":{
                "variable_value":"climate"
            }
        },
        "single-selection-1191:433:314":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"fts"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"fts"
            }
        },
        "string-input-1177:1587:354":{
            "type":"string",
            "default":"GtC/yr",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"GtC/yr"
        },
        "column-filter-1177:1532:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"elc_emissions-CO2_fossil_coal[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "elc_emissions-CO2_fossil_coal[MtCO2e]",
                    "elc_emissions-CO2_fossil_natural-gas[MtCO2e]",
                    "elc_emissions-CO2_fossil_oil[MtCO2e]",
                    "elc_emissions-CO2_fossil_total[MtCO2e]"
                ]
            }
        },
        "boolean-input-1177:1604:359":{
            "type":"boolean",
            "default":"false",
            "description":"Remove columns used in the calculation",
            "example":false
        },
        "string-input-1177:1708:1296:349":{
            "type":"string",
            "default":"clm_emissions-SO2_EUCalc",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"clm_emissions-SO2_EUCalc"
        },
        "string-input-1177:1532:349":{
            "type":"string",
            "default":"elc_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example":"elc_emissions-CO2e"
        },
        "column-filter-1177:1587:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "boolean-input-1177:1708:1296:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "single-selection-539:1184:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"4.4 Water"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"4.4 Water"
            }
        },
        "multiple-selection-1199:1323:131":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"CO2"
                    }
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":[
                    "CO2",
                    "N2O",
                    "CH4"
                ]
            }
        },
        "string-input-1178:1211:1208:644":{
            "type":"string",
            "default":"%",
            "description":"New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example":"%"
        },
        "string-input-1177:1764:1743:1245":{
            "type":"string",
            "default":".*emissions.*\\[Mt\\]",
            "description":"Enter Description",
            "example":".*emissions.*\\[Mt\\]"
        },
        "column-filter-1177:1769:1743:1253":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "string-input-1177:1764:1743:1246":{
            "type":"string",
            "default":"MtC/yr",
            "description":"Enter Description",
            "example":"MtC/yr"
        },
        "boolean-input-1177:1586:359":{
            "type":"boolean",
            "default":"false",
            "description":"Remove columns used in the calculation",
            "example":false
        },
        "string-input-1178:1211:1208:641":{
            "type":"string",
            "default":"cal_rate_emissions",
            "description":"Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example":"cal_rate_emissions"
        },
        "column-filter-1177:1591:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"agr_emissions-CH4_crop_burnt-residues[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "agr_emissions-CH4_crop_burnt-residues[MtCO2e]",
                    "agr_emissions-CH4_crop_rice[MtCO2e]",
                    "agr_emissions-CH4_liv_enteric_abp_dairy-milk[MtCO2e]",
                    "agr_emissions-CH4_liv_enteric_abp_hens-egg[MtCO2e]",
                    "agr_emissions-CH4_liv_enteric_meat_bovine[MtCO2e]",
                    "agr_emissions-CH4_liv_enteric_meat_oth-animals[MtCO2e]",
                    "agr_emissions-CH4_liv_enteric_meat_pig[MtCO2e]",
                    "agr_emissions-CH4_liv_enteric_meat_poultry[MtCO2e]",
                    "agr_emissions-CH4_liv_enteric_meat_sheep[MtCO2e]",
                    "agr_emissions-CH4_liv_treated_abp_dairy-milk[MtCO2e]",
                    "agr_emissions-CH4_liv_treated_abp_hens-egg[MtCO2e]",
                    "agr_emissions-CH4_liv_treated_meat_bovine[MtCO2e]",
                    "agr_emissions-CH4_liv_treated_meat_oth-animals[MtCO2e]",
                    "agr_emissions-CH4_liv_treated_meat_pig[MtCO2e]",
                    "agr_emissions-CH4_liv_treated_meat_poultry[MtCO2e]",
                    "agr_emissions-CH4_liv_treated_meat_sheep[MtCO2e]",
                    "agr_emissions-N2O_crop_burnt-residues[MtCO2e]",
                    "agr_emissions-N2O_crop_fertilizer[MtCO2e]",
                    "agr_emissions-N2O_crop_soil-residues[MtCO2e]",
                    "agr_emissions-N2O_liv_applied_abp_dairy-milk[MtCO2e]",
                    "agr_emissions-N2O_liv_applied_abp_hens-egg[MtCO2e]",
                    "agr_emissions-N2O_liv_applied_meat_bovine[MtCO2e]",
                    "agr_emissions-N2O_liv_applied_meat_oth-animals[MtCO2e]",
                    "agr_emissions-N2O_liv_applied_meat_pig[MtCO2e]",
                    "agr_emissions-N2O_liv_applied_meat_poultry[MtCO2e]",
                    "agr_emissions-N2O_liv_applied_meat_sheep[MtCO2e]",
                    "agr_emissions-N2O_liv_pasture_abp_dairy-milk[MtCO2e]",
                    "agr_emissions-N2O_liv_pasture_abp_hens-egg[MtCO2e]",
                    "agr_emissions-N2O_liv_pasture_meat_bovine[MtCO2e]",
                    "agr_emissions-N2O_liv_pasture_meat_oth-animals[MtCO2e]",
                    "agr_emissions-N2O_liv_pasture_meat_pig[MtCO2e]",
                    "agr_emissions-N2O_liv_pasture_meat_poultry[MtCO2e]",
                    "agr_emissions-N2O_liv_pasture_meat_sheep[MtCO2e]",
                    "agr_emissions-N2O_liv_treated_abp_dairy-milk[MtCO2e]",
                    "agr_emissions-N2O_liv_treated_abp_hens-egg[MtCO2e]",
                    "agr_emissions-N2O_liv_treated_meat_bovine[MtCO2e]",
                    "agr_emissions-N2O_liv_treated_meat_oth-animals[MtCO2e]",
                    "agr_emissions-N2O_liv_treated_meat_pig[MtCO2e]",
                    "agr_emissions-N2O_liv_treated_meat_poultry[MtCO2e]",
                    "agr_emissions-N2O_liv_treated_meat_sheep[MtCO2e]"
                ]
            }
        },
        "string-input-1178:1211:1208:642":{
            "type":"string",
            "default":".*clm_emissions_(.*)\\[.*",
            "description":"Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. ",
            "example":".*clm_emissions_(.*)\\[.*"
        },
        "string-input-1177:1587:349":{
            "type":"string",
            "default":"world_annual_ems",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"world_annual_ems"
        },
        "string-input-1178:1211:1208:643":{
            "type":"string",
            "default":"emissions.*",
            "description":"Pattern selecting the fixed column. The pattern should return only one column.  \nExamples: \"sector_demand_.*\"",
            "example":"emissions.*"
        },
        "single-selection-1177:1526:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1177:1591:349":{
            "type":"string",
            "default":"agr_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example":"agr_emissions-CO2e"
        },
        "string-input-1177:1583:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "string-input-1177:1266:1150:444":{
            "type":"string",
            "default":"cal_rate",
            "description":"Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example":"cal_rate"
        },
        "string-input-1177:1266:1150:445":{
            "type":"string",
            "default":"cal_delta_(.*)\\[.*",
            "description":"Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example":"cal_delta_(.*)\\[.*"
        },
        "string-input-1177:1266:1146:460":{
            "type":"string",
            "default":"unit",
            "description":"New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example":"unit"
        },
        "single-selection-539:428:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Naming convention"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"Naming convention"
            }
        },
        "column-filter-1177:1736:1253":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"clm_ems_annual_EU[MtC/yr]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "clm_ems_annual_EU[MtC/yr]"
                ]
            }
        },
        "string-input-1177:1532:357":{
            "type":"string",
            "default":"elc_emissions-..._(.*)\\[MtCO2e\\]*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"elc_emissions-..._(.*)\\[MtCO2e\\]*"
        },
        "column-filter-1177:1266:1151:652":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"cal_tra_calibration_HDV[Gtkm]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "cal_tra_calibration_HDV[Gtkm]",
                    "cal_tra_calibration_rail[Gtkm]",
                    "cal_tra_calibration_IWW[Gtkm]"
                ]
            }
        },
        "string-input-1177:1266:1150:446":{
            "type":"string",
            "default":"identifier",
            "description":"Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example":"identifier"
        },
        "string-input-1177:1583:357":{
            "type":"string",
            "default":"lus_.*emissions-..._(.*)\\[MtCO2e\\]*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"lus_.*emissions-..._(.*)\\[MtCO2e\\]*"
        },
        "boolean-input-1177:1504:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "string-input-1177:1532:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "boolean-input-1177:1719:1258":{
            "type":"boolean",
            "default":"false",
            "description":"Enter Description",
            "example":false
        },
        "column-filter-1216:844":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"Country"
                    }
                }
            },
            "description":"Enter Description",
            "example":{
                "columns":[
                    "Country",
                    "Years",
                    "agr_input-use_emissions-CO2_fuel[Mt]",
                    "agr_input-use_emissions-CO2_liming[Mt]",
                    "agr_input-use_emissions-CO2_urea[Mt]",
                    "clm_total_CO2e_ems[MtCO2e]",
                    "bdy_emissions-CO2e[Mt]",
                    "amm_emissions-CO2e[Mt]",
                    "fos_emissions-CO2e[Mt]",
                    "elc_emissions-CO2e_RES_bio[Mt]",
                    "elc_emissions-CO2e_fossil_coal[Mt]",
                    "elc_emissions-CO2e_fossil_natural-gas[Mt]",
                    "elc_emissions-CO2e_fossil_oil[Mt]",
                    "agr_emissions-CO2e_crop_burnt-residues[Mt]",
                    "agr_emissions-CO2e_crop_fertilizer[Mt]",
                    "agr_emissions-CO2e_crop_rice[Mt]",
                    "agr_emissions-CO2e_crop_soil-residues[Mt]",
                    "agr_emissions-CO2e_liv_applied_abp_dairy-milk[Mt]",
                    "agr_emissions-CO2e_liv_applied_abp_hens-egg[Mt]",
                    "agr_emissions-CO2e_liv_applied_meat_bovine[Mt]",
                    "agr_emissions-CO2e_liv_applied_meat_oth-animals[Mt]",
                    "agr_emissions-CO2e_liv_applied_meat_pig[Mt]",
                    "agr_emissions-CO2e_liv_applied_meat_poultry[Mt]",
                    "agr_emissions-CO2e_liv_applied_meat_sheep[Mt]",
                    "agr_emissions-CO2e_liv_enteric_abp_dairy-milk[Mt]",
                    "agr_emissions-CO2e_liv_enteric_abp_hens-egg[Mt]",
                    "agr_emissions-CO2e_liv_enteric_meat_bovine[Mt]",
                    "agr_emissions-CO2e_liv_enteric_meat_oth-animals[Mt]",
                    "agr_emissions-CO2e_liv_enteric_meat_pig[Mt]",
                    "agr_emissions-CO2e_liv_enteric_meat_poultry[Mt]",
                    "agr_emissions-CO2e_liv_enteric_meat_sheep[Mt]",
                    "agr_emissions-CO2e_liv_pasture_abp_dairy-milk[Mt]",
                    "agr_emissions-CO2e_liv_pasture_abp_hens-egg[Mt]",
                    "agr_emissions-CO2e_liv_pasture_meat_bovine[Mt]",
                    "agr_emissions-CO2e_liv_pasture_meat_oth-animals[Mt]",
                    "agr_emissions-CO2e_liv_pasture_meat_pig[Mt]",
                    "agr_emissions-CO2e_liv_pasture_meat_poultry[Mt]",
                    "agr_emissions-CO2e_liv_pasture_meat_sheep[Mt]",
                    "agr_emissions-CO2e_liv_treated_abp_dairy-milk[Mt]",
                    "agr_emissions-CO2e_liv_treated_abp_hens-egg[Mt]",
                    "agr_emissions-CO2e_liv_treated_meat_bovine[Mt]",
                    "agr_emissions-CO2e_liv_treated_meat_oth-animals[Mt]",
                    "agr_emissions-CO2e_liv_treated_meat_pig[Mt]",
                    "agr_emissions-CO2e_liv_treated_meat_poultry[Mt]",
                    "agr_emissions-CO2e_liv_treated_meat_sheep[Mt]",
                    "lus_emissions-CO2e_cropland-rem-cropland[Mt]",
                    "lus_emissions-CO2e_forest-rem-forest[Mt]",
                    "lus_emissions-CO2e_grassland-rem-grassland[Mt]",
                    "lus_emissions-CO2e_land-to-cropland[Mt]",
                    "lus_emissions-CO2e_land-to-forest[Mt]",
                    "lus_emissions-CO2e_land-to-grassland[Mt]",
                    "lus_emissions-CO2e_land-to-other[Mt]",
                    "lus_emissions-CO2e_land-to-settlement[Mt]",
                    "lus_emissions-CO2e_land-to-wetland[Mt]",
                    "lus_emissions-CO2e_other-rem-other[Mt]",
                    "lus_emissions-CO2e_settlement-rem-settlement[Mt]",
                    "lus_emissions-CO2e_wetland-rem-wetland[Mt]",
                    "ind_emissions-CO2e_aluminium[Mt]",
                    "ind_emissions-CO2e_biogenic_cement[Mt]",
                    "ind_emissions-CO2e_biogenic_chem[Mt]",
                    "ind_emissions-CO2e_biogenic_lime[Mt]",
                    "ind_emissions-CO2e_biogenic_paper[Mt]",
                    "ind_emissions-CO2e_biogenic_steel[Mt]",
                    "ind_emissions-CO2e_cement[Mt]",
                    "ind_emissions-CO2e_chem[Mt]",
                    "ind_emissions-CO2e_copper[Mt]",
                    "ind_emissions-CO2e_fbt[Mt]",
                    "ind_emissions-CO2e_glass[Mt]",
                    "ind_emissions-CO2e_lime[Mt]",
                    "ind_emissions-CO2e_mae[Mt]",
                    "ind_emissions-CO2e_ois[Mt]",
                    "ind_emissions-CO2e_paper[Mt]",
                    "ind_emissions-CO2e_steel[Mt]",
                    "ind_emissions-CO2e_textiles[Mt]",
                    "ind_emissions-CO2e_tra-equip[Mt]",
                    "ind_emissions-CO2e_wwp[Mt]",
                    "tra_emissions-CO2e_freight_HDV[Mt]",
                    "tra_emissions-CO2e_freight_IWW[Mt]",
                    "tra_emissions-CO2e_freight_aviation[Mt]",
                    "tra_emissions-CO2e_freight_marine[Mt]",
                    "tra_emissions-CO2e_freight_rail[Mt]",
                    "tra_emissions-CO2e_passenger_2W[Mt]",
                    "tra_emissions-CO2e_passenger_LDV[Mt]",
                    "tra_emissions-CO2e_passenger_aviation[Mt]",
                    "tra_emissions-CO2e_passenger_bus[Mt]",
                    "tra_emissions-CO2e_passenger_metro-tram[Mt]",
                    "tra_emissions-CO2e_passenger_rail[Mt]",
                    "bld_emissions-CO2e_gas-ff-natural[Mt]",
                    "bld_emissions-CO2e_heat-ambient[Mt]",
                    "bld_emissions-CO2e_heat-geothermal[Mt]",
                    "bld_emissions-CO2e_heat-solar[Mt]",
                    "bld_emissions-CO2e_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2e_non-residential_appliances[Mt]",
                    "bld_emissions-CO2e_non-residential_education[Mt]",
                    "bld_emissions-CO2e_non-residential_health[Mt]",
                    "bld_emissions-CO2e_non-residential_hotels[Mt]",
                    "bld_emissions-CO2e_non-residential_offices[Mt]",
                    "bld_emissions-CO2e_non-residential_other[Mt]",
                    "bld_emissions-CO2e_non-residential_trade[Mt]",
                    "bld_emissions-CO2e_residential_appliances[Mt]",
                    "bld_emissions-CO2e_residential_mfh[Mt]",
                    "bld_emissions-CO2e_residential_sfh[Mt]",
                    "bld_emissions-CO2e_solid-bio[Mt]",
                    "bld_emissions-CO2e_solid-ff-coal[Mt]",
                    "dhg_emissions-CO2e_gas-ff-natural[Mt]",
                    "dhg_emissions-CO2e_heat-ambient[Mt]",
                    "dhg_emissions-CO2e_heat-geothermal[Mt]",
                    "dhg_emissions-CO2e_heat-solar[Mt]",
                    "dhg_emissions-CO2e_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions-CO2e_solid-bio[Mt]",
                    "dhg_emissions-CO2e_solid-ff-coal[Mt]"
                ]
            }
        },
        "column-filter-1178:1211:1182:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"Sum(cal_tra_emissions_total[MtCO2e])"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "Sum(cal_tra_emissions_total[MtCO2e])",
                    "Sum(cal_rate_emissions_total[%])"
                ]
            }
        },
        "column-filter-1177:1589:1253":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"clm_ems_cumulative_EU[MtC]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "clm_ems_cumulative_EU[MtC]"
                ]
            }
        },
        "boolean-input-1178:1211:1208:646":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation.",
            "example":true
        },
        "string-input-1199:1315:1246":{
            "type":"string",
            "default":"Mt",
            "description":"Enter Description",
            "example":"Mt"
        },
        "single-selection-1177:1604:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1199:1315:1245":{
            "type":"string",
            "default":"cal_clm.*",
            "description":"Enter Description",
            "example":"cal_clm.*"
        },
        "single-selection-1178:1211:1166:659:661":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"PARALLEL_OP"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"PARALLEL_OP"
            }
        },
        "boolean-input-1210:520:360":{
            "type":"boolean",
            "default":"false",
            "description":"Enter Description",
            "example":false
        },
        "string-input-1177:1504:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "single-selection-1178:1211:1166:653":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Java"
                }
            },
            "description":"Select code language to use",
            "example":{
                "variable_value":"Java"
            }
        },
        "string-input-1177:1504:357":{
            "type":"string",
            "default":"fos_emissions-.*\\[MtCO2e\\]",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"fos_emissions-.*\\[MtCO2e\\]"
        },
        "single-selection-1177:1534:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1177:1583:349":{
            "type":"string",
            "default":"lus_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example":"lus_emissions-CO2e"
        },
        "boolean-input-1177:1266:1150:586":{
            "type":"boolean",
            "default":"false",
            "description":"Remove columns used in the calculation.",
            "example":false
        },
        "single-selection-1177:1266:1150:463":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Division 1/2"
                }
            },
            "description":"Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example":{
                "variable_value":"Division 1/2"
            }
        },
        "boolean-input-1177:1583:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "string-input-1177:1504:349":{
            "type":"string",
            "default":"fos_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"fos_emissions-CO2e"
        },
        "single-selection-1177:1266:1146:463":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Product"
                }
            },
            "description":"Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example":{
                "variable_value":"Product"
            }
        },
        "single-selection-1210:433:314":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"ots"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"ots"
            }
        },
        "string-input-1177:1502:357":{
            "type":"string",
            "default":"bdy_emissions-.*\\[MtC.*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"bdy_emissions-.*\\[MtC.*"
        },
        "double-input-1199:1315:1247":{
            "type":"number",
            "default":0.001,
            "description":"Enter Description",
            "example":0.001
        },
        "string-input-1177:1769:1743:1245":{
            "type":"string",
            "default":".*emissions.*\\[Mt\\]",
            "description":"Enter Description",
            "example":".*emissions.*\\[Mt\\]"
        },
        "string-input-1177:1502:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "single-selection-1178:1211:1208:645":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Division 1/2"
                }
            },
            "description":"Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example":{
                "variable_value":"Division 1/2"
            }
        },
        "string-input-1177:1769:1743:1246":{
            "type":"string",
            "default":"MtC/yr",
            "description":"Enter Description",
            "example":"MtC/yr"
        },
        "single-selection-1177:1502:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "disabled-1177:1266:1171":{
            "type":"boolean",
            "default":"false",
            "description":"Disable the node. The first input is copied to the output, and calibration rates are set to 1.",
            "example":false
        },
        "boolean-input-1177:1534:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "double-input-1177:1589:1247":{
            "type":"number",
            "default":0.001,
            "description":"Enter Description",
            "example":0.001
        },
        "single-selection-1178:1188:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"3.1b Industry Ammonia"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"3.1b Industry Ammonia"
            }
        },
        "column-filter-1199:1309:1253":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "column-filter-1177:1604:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"agr_emissions-CH4_crop_burnt-residues[MtC/yr]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "agr_emissions-CH4_crop_burnt-residues[MtC/yr]",
                    "agr_emissions-CH4_crop_rice[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_abp_hens-egg[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_bovine[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_oth-animals[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_pig[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_poultry[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_sheep[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_abp_hens-egg[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_bovine[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_oth-animals[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_pig[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_poultry[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_sheep[MtC/yr]",
                    "agr_emissions-N2O_crop_burnt-residues[MtC/yr]",
                    "agr_emissions-N2O_crop_fertilizer[MtC/yr]",
                    "agr_emissions-N2O_crop_soil-residues[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_sheep[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_sheep[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_sheep[MtC/yr]",
                    "agr_input-use_emissions-CO2_fuel[MtC/yr]",
                    "agr_input-use_emissions-CO2_liming[MtC/yr]",
                    "agr_input-use_emissions-CO2_urea[MtC/yr]",
                    "amm_emissions-CH4_ammonia[MtC/yr]",
                    "amm_emissions-CO2_ammonia[MtC/yr]",
                    "amm_emissions-N2O_ammonia[MtC/yr]",
                    "bdy_emissions-CH4[MtC/yr]",
                    "bdy_emissions-CO2[MtC/yr]",
                    "bdy_emissions-N2O[MtC/yr]",
                    "bld_emissions-CH4_gas-ff-natural[MtC/yr]",
                    "bld_emissions-CH4_heat-ambient[MtC/yr]",
                    "bld_emissions-CH4_heat-geothermal[MtC/yr]",
                    "bld_emissions-CH4_heat-solar[MtC/yr]",
                    "bld_emissions-CH4_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-CH4_non-residential_appliances[MtC/yr]",
                    "bld_emissions-CH4_non-residential_education[MtC/yr]",
                    "bld_emissions-CH4_non-residential_health[MtC/yr]",
                    "bld_emissions-CH4_non-residential_hotels[MtC/yr]",
                    "bld_emissions-CH4_non-residential_offices[MtC/yr]",
                    "bld_emissions-CH4_non-residential_other[MtC/yr]",
                    "bld_emissions-CH4_non-residential_trade[MtC/yr]",
                    "bld_emissions-CH4_residential_appliances[MtC/yr]",
                    "bld_emissions-CH4_residential_mfh[MtC/yr]",
                    "bld_emissions-CH4_residential_sfh[MtC/yr]",
                    "bld_emissions-CH4_solid-bio[MtC/yr]",
                    "bld_emissions-CH4_solid-ff-coal[MtC/yr]",
                    "bld_emissions-CO2_gas-ff-natural[MtC/yr]",
                    "bld_emissions-CO2_heat-ambient[MtC/yr]",
                    "bld_emissions-CO2_heat-geothermal[MtC/yr]",
                    "bld_emissions-CO2_heat-solar[MtC/yr]",
                    "bld_emissions-CO2_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-CO2_non-residential_appliances[MtC/yr]",
                    "bld_emissions-CO2_non-residential_education[MtC/yr]",
                    "bld_emissions-CO2_non-residential_health[MtC/yr]",
                    "bld_emissions-CO2_non-residential_hotels[MtC/yr]",
                    "bld_emissions-CO2_non-residential_offices[MtC/yr]",
                    "bld_emissions-CO2_non-residential_other[MtC/yr]",
                    "bld_emissions-CO2_non-residential_trade[MtC/yr]",
                    "bld_emissions-CO2_residential_appliances[MtC/yr]",
                    "bld_emissions-CO2_residential_mfh[MtC/yr]",
                    "bld_emissions-CO2_residential_sfh[MtC/yr]",
                    "bld_emissions-CO2_solid-bio[MtC/yr]",
                    "bld_emissions-CO2_solid-ff-coal[MtC/yr]",
                    "bld_emissions-N2O_gas-ff-natural[MtC/yr]",
                    "bld_emissions-N2O_heat-ambient[MtC/yr]",
                    "bld_emissions-N2O_heat-geothermal[MtC/yr]",
                    "bld_emissions-N2O_heat-solar[MtC/yr]",
                    "bld_emissions-N2O_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-N2O_non-residential_appliances[MtC/yr]",
                    "bld_emissions-N2O_non-residential_education[MtC/yr]",
                    "bld_emissions-N2O_non-residential_health[MtC/yr]",
                    "bld_emissions-N2O_non-residential_hotels[MtC/yr]",
                    "bld_emissions-N2O_non-residential_offices[MtC/yr]",
                    "bld_emissions-N2O_non-residential_other[MtC/yr]",
                    "bld_emissions-N2O_non-residential_trade[MtC/yr]",
                    "bld_emissions-N2O_residential_appliances[MtC/yr]",
                    "bld_emissions-N2O_residential_mfh[MtC/yr]",
                    "bld_emissions-N2O_residential_sfh[MtC/yr]",
                    "bld_emissions-N2O_solid-bio[MtC/yr]",
                    "bld_emissions-N2O_solid-ff-coal[MtC/yr]",
                    "clm_emissions-CH4_uncaptured[MtC/yr]",
                    "clm_emissions-CO2_uncaptured[MtC/yr]",
                    "clm_emissions-N2O_uncaptured[MtC/yr]",
                    "dhg_emissions-CH4_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-CH4_heat-ambient[MtC/yr]",
                    "dhg_emissions-CH4_heat-geothermal[MtC/yr]",
                    "dhg_emissions-CH4_heat-solar[MtC/yr]",
                    "dhg_emissions-CH4_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-CH4_solid-bio[MtC/yr]",
                    "dhg_emissions-CH4_solid-ff-coal[MtC/yr]",
                    "dhg_emissions-CO2_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-CO2_heat-ambient[MtC/yr]",
                    "dhg_emissions-CO2_heat-geothermal[MtC/yr]",
                    "dhg_emissions-CO2_heat-solar[MtC/yr]",
                    "dhg_emissions-CO2_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-CO2_solid-bio[MtC/yr]",
                    "dhg_emissions-CO2_solid-ff-coal[MtC/yr]",
                    "dhg_emissions-N2O_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-N2O_heat-ambient[MtC/yr]",
                    "dhg_emissions-N2O_heat-geothermal[MtC/yr]",
                    "dhg_emissions-N2O_heat-solar[MtC/yr]",
                    "dhg_emissions-N2O_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-N2O_solid-bio[MtC/yr]",
                    "dhg_emissions-N2O_solid-ff-coal[MtC/yr]",
                    "elc_emissions-CO2_fossil_coal[MtC/yr]",
                    "elc_emissions-CO2_fossil_natural-gas[MtC/yr]",
                    "elc_emissions-CO2_fossil_oil[MtC/yr]",
                    "elc_emissions-CO2_fossil_total[MtC/yr]",
                    "fos_emissions-CO2[MtC/yr]",
                    "ind_emissions-CH4_aluminium[MtC/yr]",
                    "ind_emissions-CH4_cement[MtC/yr]",
                    "ind_emissions-CH4_chem[MtC/yr]",
                    "ind_emissions-CH4_copper[MtC/yr]",
                    "ind_emissions-CH4_fbt[MtC/yr]",
                    "ind_emissions-CH4_glass[MtC/yr]",
                    "ind_emissions-CH4_lime[MtC/yr]",
                    "ind_emissions-CH4_mae[MtC/yr]",
                    "ind_emissions-CH4_ois[MtC/yr]",
                    "ind_emissions-CH4_paper[MtC/yr]",
                    "ind_emissions-CH4_steel[MtC/yr]",
                    "ind_emissions-CH4_textiles[MtC/yr]",
                    "ind_emissions-CH4_tra-equip[MtC/yr]",
                    "ind_emissions-CH4_wwp[MtC/yr]",
                    "ind_emissions-CO2_aluminium[MtC/yr]",
                    "ind_emissions-CO2_cement[MtC/yr]",
                    "ind_emissions-CO2_chem[MtC/yr]",
                    "ind_emissions-CO2_copper[MtC/yr]",
                    "ind_emissions-CO2_fbt[MtC/yr]",
                    "ind_emissions-CO2_glass[MtC/yr]",
                    "ind_emissions-CO2_lime[MtC/yr]",
                    "ind_emissions-CO2_mae[MtC/yr]",
                    "ind_emissions-CO2_ois[MtC/yr]",
                    "ind_emissions-CO2_paper[MtC/yr]",
                    "ind_emissions-CO2_steel[MtC/yr]",
                    "ind_emissions-CO2_textiles[MtC/yr]",
                    "ind_emissions-CO2_tra-equip[MtC/yr]",
                    "ind_emissions-CO2_wwp[MtC/yr]",
                    "ind_emissions-N2O_aluminium[MtC/yr]",
                    "ind_emissions-N2O_cement[MtC/yr]",
                    "ind_emissions-N2O_chem[MtC/yr]",
                    "ind_emissions-N2O_copper[MtC/yr]",
                    "ind_emissions-N2O_fbt[MtC/yr]",
                    "ind_emissions-N2O_glass[MtC/yr]",
                    "ind_emissions-N2O_lime[MtC/yr]",
                    "ind_emissions-N2O_mae[MtC/yr]",
                    "ind_emissions-N2O_ois[MtC/yr]",
                    "ind_emissions-N2O_paper[MtC/yr]",
                    "ind_emissions-N2O_steel[MtC/yr]",
                    "ind_emissions-N2O_textiles[MtC/yr]",
                    "ind_emissions-N2O_tra-equip[MtC/yr]",
                    "ind_emissions-N2O_wwp[MtC/yr]",
                    "lus_emissions-CO2_cropland-rem-cropland[MtC/yr]",
                    "lus_emissions-CO2_forest-rem-forest[MtC/yr]",
                    "lus_emissions-CO2_grassland-rem-grassland[MtC/yr]",
                    "lus_emissions-CO2_land-to-cropland[MtC/yr]",
                    "lus_emissions-CO2_land-to-forest[MtC/yr]",
                    "lus_emissions-CO2_land-to-grassland[MtC/yr]",
                    "lus_emissions-CO2_land-to-other[MtC/yr]",
                    "lus_emissions-CO2_land-to-settlement[MtC/yr]",
                    "lus_emissions-CO2_land-to-wetland[MtC/yr]",
                    "lus_emissions-CO2_other-rem-other[MtC/yr]",
                    "lus_emissions-CO2_settlement-rem-settlement[MtC/yr]",
                    "lus_emissions-CO2_wetland-rem-wetland[MtC/yr]",
                    "tra_emissions-CH4_freight_HDV[MtC/yr]",
                    "tra_emissions-CH4_freight_IWW[MtC/yr]",
                    "tra_emissions-CH4_freight_aviation[MtC/yr]",
                    "tra_emissions-CH4_freight_marine[MtC/yr]",
                    "tra_emissions-CH4_freight_rail[MtC/yr]",
                    "tra_emissions-CH4_passenger_2W[MtC/yr]",
                    "tra_emissions-CH4_passenger_LDV[MtC/yr]",
                    "tra_emissions-CH4_passenger_aviation[MtC/yr]",
                    "tra_emissions-CH4_passenger_bus[MtC/yr]",
                    "tra_emissions-CH4_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-CH4_passenger_rail[MtC/yr]",
                    "tra_emissions-CO2_freight_HDV[MtC/yr]",
                    "tra_emissions-CO2_freight_IWW[MtC/yr]",
                    "tra_emissions-CO2_freight_aviation[MtC/yr]",
                    "tra_emissions-CO2_freight_marine[MtC/yr]",
                    "tra_emissions-CO2_freight_rail[MtC/yr]",
                    "tra_emissions-CO2_passenger_2W[MtC/yr]",
                    "tra_emissions-CO2_passenger_LDV[MtC/yr]",
                    "tra_emissions-CO2_passenger_aviation[MtC/yr]",
                    "tra_emissions-CO2_passenger_bus[MtC/yr]",
                    "tra_emissions-CO2_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-CO2_passenger_rail[MtC/yr]",
                    "tra_emissions-N2O_freight_HDV[MtC/yr]",
                    "tra_emissions-N2O_freight_IWW[MtC/yr]",
                    "tra_emissions-N2O_freight_aviation[MtC/yr]",
                    "tra_emissions-N2O_freight_marine[MtC/yr]",
                    "tra_emissions-N2O_freight_rail[MtC/yr]",
                    "tra_emissions-N2O_passenger_2W[MtC/yr]",
                    "tra_emissions-N2O_passenger_LDV[MtC/yr]",
                    "tra_emissions-N2O_passenger_aviation[MtC/yr]",
                    "tra_emissions-N2O_passenger_bus[MtC/yr]",
                    "tra_emissions-N2O_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-N2O_passenger_rail[MtC/yr]"
                ]
            }
        },
        "column-filter-1177:1770:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"bld_emissions-CO2_gas-ff-natural[MtC/yr]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "bld_emissions-CO2_gas-ff-natural[MtC/yr]",
                    "bld_emissions-N2O_gas-ff-natural[MtC/yr]",
                    "bld_emissions-CH4_gas-ff-natural[MtC/yr]",
                    "bld_emissions-CO2_heat-ambient[MtC/yr]",
                    "bld_emissions-N2O_heat-ambient[MtC/yr]",
                    "bld_emissions-CH4_heat-ambient[MtC/yr]",
                    "bld_emissions-CO2_heat-geothermal[MtC/yr]",
                    "bld_emissions-N2O_heat-geothermal[MtC/yr]",
                    "bld_emissions-CH4_heat-geothermal[MtC/yr]",
                    "bld_emissions-CO2_heat-solar[MtC/yr]",
                    "bld_emissions-N2O_heat-solar[MtC/yr]",
                    "bld_emissions-CH4_heat-solar[MtC/yr]",
                    "bld_emissions-CO2_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-N2O_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-CH4_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-CO2_solid-ff-coal[MtC/yr]",
                    "bld_emissions-N2O_solid-ff-coal[MtC/yr]",
                    "bld_emissions-CH4_solid-ff-coal[MtC/yr]",
                    "bld_emissions-CH4_solid-bio[MtC/yr]",
                    "bld_emissions-CO2_solid-bio[MtC/yr]",
                    "bld_emissions-N2O_solid-bio[MtC/yr]",
                    "tra_emissions-N2O_passenger_2W[MtC/yr]",
                    "tra_emissions-N2O_passenger_LDV[MtC/yr]",
                    "tra_emissions-N2O_passenger_rail[MtC/yr]",
                    "tra_emissions-N2O_passenger_bus[MtC/yr]",
                    "tra_emissions-N2O_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-N2O_passenger_aviation[MtC/yr]",
                    "tra_emissions-CH4_passenger_2W[MtC/yr]",
                    "tra_emissions-CH4_passenger_LDV[MtC/yr]",
                    "tra_emissions-CH4_passenger_rail[MtC/yr]",
                    "tra_emissions-CH4_passenger_bus[MtC/yr]",
                    "tra_emissions-CH4_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-CH4_passenger_aviation[MtC/yr]",
                    "tra_emissions-CO2_passenger_2W[MtC/yr]",
                    "tra_emissions-CO2_passenger_LDV[MtC/yr]",
                    "tra_emissions-CO2_passenger_rail[MtC/yr]",
                    "tra_emissions-CO2_passenger_bus[MtC/yr]",
                    "tra_emissions-CO2_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-CO2_passenger_aviation[MtC/yr]",
                    "tra_emissions-N2O_freight_HDV[MtC/yr]",
                    "tra_emissions-N2O_freight_rail[MtC/yr]",
                    "tra_emissions-N2O_freight_IWW[MtC/yr]",
                    "tra_emissions-N2O_freight_marine[MtC/yr]",
                    "tra_emissions-N2O_freight_aviation[MtC/yr]",
                    "tra_emissions-CH4_freight_HDV[MtC/yr]",
                    "tra_emissions-CH4_freight_rail[MtC/yr]",
                    "tra_emissions-CH4_freight_IWW[MtC/yr]",
                    "tra_emissions-CH4_freight_marine[MtC/yr]",
                    "tra_emissions-CH4_freight_aviation[MtC/yr]",
                    "tra_emissions-CO2_freight_HDV[MtC/yr]",
                    "tra_emissions-CO2_freight_rail[MtC/yr]",
                    "tra_emissions-CO2_freight_IWW[MtC/yr]",
                    "tra_emissions-CO2_freight_marine[MtC/yr]",
                    "tra_emissions-CO2_freight_aviation[MtC/yr]",
                    "dhg_emissions-CO2_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-CH4_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-N2O_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-CO2_heat-ambient[MtC/yr]",
                    "dhg_emissions-CH4_heat-ambient[MtC/yr]",
                    "dhg_emissions-N2O_heat-ambient[MtC/yr]",
                    "dhg_emissions-CO2_heat-geothermal[MtC/yr]",
                    "dhg_emissions-CH4_heat-geothermal[MtC/yr]",
                    "dhg_emissions-N2O_heat-geothermal[MtC/yr]",
                    "dhg_emissions-CO2_heat-solar[MtC/yr]",
                    "dhg_emissions-CH4_heat-solar[MtC/yr]",
                    "dhg_emissions-N2O_heat-solar[MtC/yr]",
                    "dhg_emissions-CO2_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-CH4_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-N2O_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-CO2_solid-bio[MtC/yr]",
                    "dhg_emissions-CH4_solid-bio[MtC/yr]",
                    "dhg_emissions-N2O_solid-bio[MtC/yr]",
                    "dhg_emissions-CO2_solid-ff-coal[MtC/yr]",
                    "dhg_emissions-CH4_solid-ff-coal[MtC/yr]",
                    "dhg_emissions-N2O_solid-ff-coal[MtC/yr]",
                    "ind_emissions-CH4_steel[MtC/yr]",
                    "ind_emissions-CH4_cement[MtC/yr]",
                    "ind_emissions-CH4_paper[MtC/yr]",
                    "ind_emissions-CH4_chem[MtC/yr]",
                    "ind_emissions-CH4_aluminium[MtC/yr]",
                    "ind_emissions-CH4_glass[MtC/yr]",
                    "ind_emissions-CH4_lime[MtC/yr]",
                    "ind_emissions-CH4_copper[MtC/yr]",
                    "ind_emissions-CH4_tra-equip[MtC/yr]",
                    "ind_emissions-CH4_fbt[MtC/yr]",
                    "ind_emissions-CH4_textiles[MtC/yr]",
                    "ind_emissions-CH4_mae[MtC/yr]",
                    "ind_emissions-CH4_wwp[MtC/yr]",
                    "ind_emissions-CH4_ois[MtC/yr]",
                    "ind_emissions-N2O_steel[MtC/yr]",
                    "ind_emissions-N2O_cement[MtC/yr]",
                    "ind_emissions-N2O_paper[MtC/yr]",
                    "ind_emissions-N2O_chem[MtC/yr]",
                    "ind_emissions-N2O_aluminium[MtC/yr]",
                    "ind_emissions-N2O_glass[MtC/yr]",
                    "ind_emissions-N2O_lime[MtC/yr]",
                    "ind_emissions-N2O_copper[MtC/yr]",
                    "ind_emissions-N2O_tra-equip[MtC/yr]",
                    "ind_emissions-N2O_fbt[MtC/yr]",
                    "ind_emissions-N2O_textiles[MtC/yr]",
                    "ind_emissions-N2O_mae[MtC/yr]",
                    "ind_emissions-N2O_wwp[MtC/yr]",
                    "ind_emissions-N2O_ois[MtC/yr]",
                    "ind_emissions-CO2_steel[MtC/yr]",
                    "ind_emissions-CO2_cement[MtC/yr]",
                    "ind_emissions-CO2_chem[MtC/yr]",
                    "ind_emissions-CO2_paper[MtC/yr]",
                    "ind_emissions-CO2_aluminium[MtC/yr]",
                    "ind_emissions-CO2_glass[MtC/yr]",
                    "ind_emissions-CO2_lime[MtC/yr]",
                    "ind_emissions-CO2_tra-equip[MtC/yr]",
                    "ind_emissions-CO2_fbt[MtC/yr]",
                    "ind_emissions-CO2_textiles[MtC/yr]",
                    "ind_emissions-CO2_mae[MtC/yr]",
                    "ind_emissions-CO2_wwp[MtC/yr]",
                    "ind_emissions-CO2_ois[MtC/yr]",
                    "ind_emissions-CO2_copper[MtC/yr]",
                    "amm_emissions-CO2_ammonia[MtC/yr]",
                    "amm_emissions-CH4_ammonia[MtC/yr]",
                    "amm_emissions-N2O_ammonia[MtC/yr]",
                    "lus_land_emissions-CO2_forest[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_bovine[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_pig[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_sheep[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_sheep[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_sheep[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_sheep[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_oth-animals[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_bovine[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_sheep[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_pig[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_poultry[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_abp_hens-egg[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_crop_soil-residues[MtC/yr]",
                    "agr_emissions-N2O_crop_burnt-residues[MtC/yr]",
                    "agr_emissions-CH4_crop_burnt-residues[MtC/yr]",
                    "agr_emissions-CH4_crop_rice[MtC/yr]",
                    "agr_emissions-N2O_crop_fertilizer[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_diesel[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_gasoline[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_coal[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_fuel-oil[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_el[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_gas[MtC/yr]",
                    "bdy_emissions-CO2[MtC/yr]",
                    "bdy_emissions-CH4[MtC/yr]",
                    "bdy_emissions-N2O[MtC/yr]",
                    "elc_emissions-CO2_fossil_total[MtC/yr]",
                    "fos_emissions-CO2[MtC/yr]"
                ]
            }
        },
        "string-input-1177:1266:1150:460":{
            "type":"string",
            "default":"%",
            "description":"New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example":"%"
        },
        "string-input-1177:1604:349":{
            "type":"string",
            "default":"clm_total_CO2e_ems[MtC/yr]",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"clm_total_CO2e_ems[MtC/yr]"
        },
        "single-selection-1177:1530:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1177:1502:349":{
            "type":"string",
            "default":"bdy_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"bdy_emissions-CO2e"
        },
        "single-selection-1178:1211:1208:658":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Java"
                }
            },
            "description":"Select code language to use",
            "example":{
                "variable_value":"Java"
            }
        },
        "string-input-1177:1770:349":{
            "type":"string",
            "default":"Sum",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"Sum"
        },
        "single-selection-1177:1708:1296:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "column-filter-1178:1211:1208:653":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "string-input-1178:1211:446":{
            "type":"string",
            "default":"",
            "description":"Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example":""
        },
        "string-input-1178:1211:445":{
            "type":"string",
            "default":"cal_rate_(.*)\\[.*",
            "description":"Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example":"cal_rate_(.*)\\[.*"
        },
        "string-input-1178:1211:444":{
            "type":"string",
            "default":"cal_product",
            "description":"Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example":"cal_product"
        },
        "single-selection-1178:1194:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"5.2 Oil Refinery"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"5.2 Oil Refinery"
            }
        },
        "single-selection-1177:1591:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "boolean-input-1177:1530:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "string-input-1177:1588:1246":{
            "type":"string",
            "default":"Gt",
            "description":"Enter Description",
            "example":"Gt"
        },
        "boolean-input-1177:1591:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "column-filter-1177:1586:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"clm_ems_cumulative_EU[GtC]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "clm_ems_cumulative_EU[GtC]",
                    "RoW_ems_cum[GtC]"
                ]
            }
        },
        "string-input-1177:1588:1245":{
            "type":"string",
            "default":".*\\[Mt\\].*",
            "description":"Enter Description",
            "example":".*\\[Mt\\].*"
        },
        "column-filter-1177:1266:652":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"clm_emissions-CO2[Mt]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "clm_emissions-CO2[Mt]",
                    "clm_emissions-N2O[Mt]",
                    "clm_emissions-CH4[Mt]",
                    "clm_emissions-SO2[Mt]"
                ]
            }
        },
        "string-input-1177:1604:354":{
            "type":"string",
            "default":"MtC/yr",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"MtC/yr"
        },
        "column-filter-1178:1211:652":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"cal_rate_emissions_total[%]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "cal_rate_emissions_total[%]",
                    "cal_rate_energy_rail[%]",
                    "cal_rate_energy_road[%]",
                    "cal_rate_energy_aviation-international[%]",
                    "cal_rate_energy_aviation-domestic[%]",
                    "cal_rate_activity_aviation[%]",
                    "cal_rate_activity_rail-passenger[%]",
                    "cal_rate_activity_road-private[%]",
                    "cal_rate_activity_road-public[%]",
                    "cal_rate_activity_HDV[%]",
                    "cal_rate_activity_rail-freight[%]",
                    "cal_rate_activity_IWW[%]"
                ]
            }
        },
        "string-input-1177:1604:357":{
            "type":"string",
            "default":".*_emissions.*\\[MtC/yr\\]",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":".*_emissions.*\\[MtC/yr\\]"
        },
        "string-input-1177:1591:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "column-filter-1177:1708:1296:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "boolean-input-1177:1503:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "single-selection-1178:1202:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"4.5 Biodiversity"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"4.5 Biodiversity"
            }
        },
        "string-input-1177:1770:357":{
            "type":"string",
            "default":".*_emissions.*\\[MtC/yr\\]",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":".*_emissions.*\\[MtC/yr\\]"
        },
        "single-selection-1178:1211:355":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"climate"
                }
            },
            "description":"Module Selection",
            "example":{
                "variable_value":"climate"
            }
        },
        "single-selection-1178:1183:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"3.1a Industry"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"3.1a Industry"
            }
        },
        "single-selection-1177:1770:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "string-input-1177:1770:354":{
            "type":"string",
            "default":"MtC/yr",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"MtC/yr"
        },
        "boolean-input-900:520:360":{
            "type":"boolean",
            "default":"false",
            "description":"Enter Description",
            "example":false
        },
        "single-selection-1178:1211:1208:661":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"SPLIT"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"SPLIT"
            }
        },
        "multiple-selection-1199:128":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"TOTXMEMO - All sectors and indirect CO2 (excluding memo items)"
                    }
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":[
                    "TOTXMEMO - All sectors and indirect CO2 (excluding memo items)",
                    "CRF1D1 - International bunkers (memo item)",
                    "CRF1D2 - Multilateral operations (memo item)",
                    "CRF1D3 - Biomass - CO2 emissions (memo item)"
                ]
            }
        },
        "string-input-1178:1211:1166:445":{
            "type":"string",
            "default":".*cal_tra_(.*)\\[.*",
            "description":"Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example":".*cal_tra_(.*)\\[.*"
        },
        "boolean-input-1178:1211:1166:586":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation.",
            "example":true
        },
        "string-input-1178:1211:1166:446":{
            "type":"string",
            "default":".*cal_product_(.*)\\[.*",
            "description":"Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example":".*cal_product_(.*)\\[.*"
        },
        "column-filter-1177:1719:1259":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"EU_ems_annual[MtC/yr]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "EU_ems_annual[MtC/yr]",
                    "agr_emissions-CH4_crop_burnt-residues[MtC/yr]",
                    "agr_emissions-CH4_crop_rice[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_abp_hens-egg[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_bovine[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_oth-animals[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_pig[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_poultry[MtC/yr]",
                    "agr_emissions-CH4_liv_enteric_meat_sheep[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_abp_hens-egg[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_bovine[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_oth-animals[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_pig[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_poultry[MtC/yr]",
                    "agr_emissions-CH4_liv_treated_meat_sheep[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_gas-ff-natural[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_liquid-ff-diesel[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_liquid-ff-fuel-oil[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_liquid-ff-gasoline[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_liquid-ff-lpg[MtC/yr]",
                    "agr_emissions-CO2_energy-demand_solid-ff-coal[MtC/yr]",
                    "agr_emissions-N2O_crop_burnt-residues[MtC/yr]",
                    "agr_emissions-N2O_crop_fertilizer[MtC/yr]",
                    "agr_emissions-N2O_crop_soil-residues[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_applied_meat_sheep[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_pasture_meat_sheep[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_abp_dairy-milk[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_abp_hens-egg[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_bovine[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_oth-animals[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_pig[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_poultry[MtC/yr]",
                    "agr_emissions-N2O_liv_treated_meat_sheep[MtC/yr]",
                    "amm_emissions-CH4_ammonia[MtC/yr]",
                    "amm_emissions-CO2_ammonia[MtC/yr]",
                    "amm_emissions-N2O_ammonia[MtC/yr]",
                    "bdy_emissions-CH4[MtC/yr]",
                    "bdy_emissions-CO2[MtC/yr]",
                    "bdy_emissions-N2O[MtC/yr]",
                    "bld_emissions-CH4_gas-ff-natural[MtC/yr]",
                    "bld_emissions-CH4_heat-ambient[MtC/yr]",
                    "bld_emissions-CH4_heat-geothermal[MtC/yr]",
                    "bld_emissions-CH4_heat-solar[MtC/yr]",
                    "bld_emissions-CH4_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-CH4_non-residential_appliances[MtC/yr]",
                    "bld_emissions-CH4_non-residential_education[MtC/yr]",
                    "bld_emissions-CH4_non-residential_health[MtC/yr]",
                    "bld_emissions-CH4_non-residential_hotels[MtC/yr]",
                    "bld_emissions-CH4_non-residential_offices[MtC/yr]",
                    "bld_emissions-CH4_non-residential_other[MtC/yr]",
                    "bld_emissions-CH4_non-residential_trade[MtC/yr]",
                    "bld_emissions-CH4_residential_appliances[MtC/yr]",
                    "bld_emissions-CH4_residential_mfh[MtC/yr]",
                    "bld_emissions-CH4_residential_sfh[MtC/yr]",
                    "bld_emissions-CH4_solid-bio[MtC/yr]",
                    "bld_emissions-CH4_solid-ff-coal[MtC/yr]",
                    "bld_emissions-CO2_gas-ff-natural[MtC/yr]",
                    "bld_emissions-CO2_heat-ambient[MtC/yr]",
                    "bld_emissions-CO2_heat-geothermal[MtC/yr]",
                    "bld_emissions-CO2_heat-solar[MtC/yr]",
                    "bld_emissions-CO2_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-CO2_non-residential_appliances[MtC/yr]",
                    "bld_emissions-CO2_non-residential_education[MtC/yr]",
                    "bld_emissions-CO2_non-residential_health[MtC/yr]",
                    "bld_emissions-CO2_non-residential_hotels[MtC/yr]",
                    "bld_emissions-CO2_non-residential_offices[MtC/yr]",
                    "bld_emissions-CO2_non-residential_other[MtC/yr]",
                    "bld_emissions-CO2_non-residential_trade[MtC/yr]",
                    "bld_emissions-CO2_residential_appliances[MtC/yr]",
                    "bld_emissions-CO2_residential_mfh[MtC/yr]",
                    "bld_emissions-CO2_residential_sfh[MtC/yr]",
                    "bld_emissions-CO2_solid-bio[MtC/yr]",
                    "bld_emissions-CO2_solid-ff-coal[MtC/yr]",
                    "bld_emissions-N2O_gas-ff-natural[MtC/yr]",
                    "bld_emissions-N2O_heat-ambient[MtC/yr]",
                    "bld_emissions-N2O_heat-geothermal[MtC/yr]",
                    "bld_emissions-N2O_heat-solar[MtC/yr]",
                    "bld_emissions-N2O_liquid-ff-heatingoil[MtC/yr]",
                    "bld_emissions-N2O_non-residential_appliances[MtC/yr]",
                    "bld_emissions-N2O_non-residential_education[MtC/yr]",
                    "bld_emissions-N2O_non-residential_health[MtC/yr]",
                    "bld_emissions-N2O_non-residential_hotels[MtC/yr]",
                    "bld_emissions-N2O_non-residential_offices[MtC/yr]",
                    "bld_emissions-N2O_non-residential_other[MtC/yr]",
                    "bld_emissions-N2O_non-residential_trade[MtC/yr]",
                    "bld_emissions-N2O_residential_appliances[MtC/yr]",
                    "bld_emissions-N2O_residential_mfh[MtC/yr]",
                    "bld_emissions-N2O_residential_sfh[MtC/yr]",
                    "bld_emissions-N2O_solid-bio[MtC/yr]",
                    "bld_emissions-N2O_solid-ff-coal[MtC/yr]",
                    "dhg_emissions-CH4_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-CH4_heat-ambient[MtC/yr]",
                    "dhg_emissions-CH4_heat-geothermal[MtC/yr]",
                    "dhg_emissions-CH4_heat-solar[MtC/yr]",
                    "dhg_emissions-CH4_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-CH4_solid-bio[MtC/yr]",
                    "dhg_emissions-CH4_solid-ff-coal[MtC/yr]",
                    "dhg_emissions-CO2_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-CO2_heat-ambient[MtC/yr]",
                    "dhg_emissions-CO2_heat-geothermal[MtC/yr]",
                    "dhg_emissions-CO2_heat-solar[MtC/yr]",
                    "dhg_emissions-CO2_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-CO2_solid-bio[MtC/yr]",
                    "dhg_emissions-CO2_solid-ff-coal[MtC/yr]",
                    "dhg_emissions-N2O_gas-ff-natural[MtC/yr]",
                    "dhg_emissions-N2O_heat-ambient[MtC/yr]",
                    "dhg_emissions-N2O_heat-geothermal[MtC/yr]",
                    "dhg_emissions-N2O_heat-solar[MtC/yr]",
                    "dhg_emissions-N2O_liquid-ff-heatingoil[MtC/yr]",
                    "dhg_emissions-N2O_solid-bio[MtC/yr]",
                    "dhg_emissions-N2O_solid-ff-coal[MtC/yr]",
                    "elc_emissions-CO2_fossil_coal[MtC/yr]",
                    "elc_emissions-CO2_fossil_natural-gas[MtC/yr]",
                    "elc_emissions-CO2_fossil_oil[MtC/yr]",
                    "elc_emissions-CO2_fossil_total[MtC/yr]",
                    "fos_emissions-CO2[MtC/yr]",
                    "ind_emissions-CH4_aluminium[MtC/yr]",
                    "ind_emissions-CH4_cement[MtC/yr]",
                    "ind_emissions-CH4_chem[MtC/yr]",
                    "ind_emissions-CH4_copper[MtC/yr]",
                    "ind_emissions-CH4_fbt[MtC/yr]",
                    "ind_emissions-CH4_glass[MtC/yr]",
                    "ind_emissions-CH4_lime[MtC/yr]",
                    "ind_emissions-CH4_mae[MtC/yr]",
                    "ind_emissions-CH4_ois[MtC/yr]",
                    "ind_emissions-CH4_paper[MtC/yr]",
                    "ind_emissions-CH4_steel[MtC/yr]",
                    "ind_emissions-CH4_textiles[MtC/yr]",
                    "ind_emissions-CH4_tra-equip[MtC/yr]",
                    "ind_emissions-CH4_wwp[MtC/yr]",
                    "ind_emissions-CO2_aluminium[MtC/yr]",
                    "ind_emissions-CO2_cement[MtC/yr]",
                    "ind_emissions-CO2_chem[MtC/yr]",
                    "ind_emissions-CO2_copper[MtC/yr]",
                    "ind_emissions-CO2_fbt[MtC/yr]",
                    "ind_emissions-CO2_glass[MtC/yr]",
                    "ind_emissions-CO2_lime[MtC/yr]",
                    "ind_emissions-CO2_mae[MtC/yr]",
                    "ind_emissions-CO2_ois[MtC/yr]",
                    "ind_emissions-CO2_paper[MtC/yr]",
                    "ind_emissions-CO2_steel[MtC/yr]",
                    "ind_emissions-CO2_textiles[MtC/yr]",
                    "ind_emissions-CO2_tra-equip[MtC/yr]",
                    "ind_emissions-CO2_wwp[MtC/yr]",
                    "ind_emissions-N2O_aluminium[MtC/yr]",
                    "ind_emissions-N2O_cement[MtC/yr]",
                    "ind_emissions-N2O_chem[MtC/yr]",
                    "ind_emissions-N2O_copper[MtC/yr]",
                    "ind_emissions-N2O_fbt[MtC/yr]",
                    "ind_emissions-N2O_glass[MtC/yr]",
                    "ind_emissions-N2O_lime[MtC/yr]",
                    "ind_emissions-N2O_mae[MtC/yr]",
                    "ind_emissions-N2O_ois[MtC/yr]",
                    "ind_emissions-N2O_paper[MtC/yr]",
                    "ind_emissions-N2O_steel[MtC/yr]",
                    "ind_emissions-N2O_textiles[MtC/yr]",
                    "ind_emissions-N2O_tra-equip[MtC/yr]",
                    "ind_emissions-N2O_wwp[MtC/yr]",
                    "lus_emissions-CO2_cropland-rem-cropland[MtC/yr]",
                    "lus_emissions-CO2_forest-rem-forest[MtC/yr]",
                    "lus_emissions-CO2_fst_afforestation[MtC/yr]",
                    "lus_emissions-CO2_fst_csf[MtC/yr]",
                    "lus_emissions-CO2_fst_deforestation[MtC/yr]",
                    "lus_emissions-CO2_fst_hwp[MtC/yr]",
                    "lus_emissions-CO2_grassland-rem-grassland[MtC/yr]",
                    "lus_emissions-CO2_land-to-cropland[MtC/yr]",
                    "lus_emissions-CO2_land-to-forest[MtC/yr]",
                    "lus_emissions-CO2_land-to-grassland[MtC/yr]",
                    "lus_emissions-CO2_land-to-other[MtC/yr]",
                    "lus_emissions-CO2_land-to-settlement[MtC/yr]",
                    "lus_emissions-CO2_land-to-wetland[MtC/yr]",
                    "lus_emissions-CO2_other-rem-other[MtC/yr]",
                    "lus_emissions-CO2_settlement-rem-settlement[MtC/yr]",
                    "lus_emissions-CO2_wetland-rem-wetland[MtC/yr]",
                    "lus_land_emissions-CO2_forest[MtC/yr]",
                    "tra_emissions-CH4_freight_HDV[MtC/yr]",
                    "tra_emissions-CH4_freight_IWW[MtC/yr]",
                    "tra_emissions-CH4_freight_aviation[MtC/yr]",
                    "tra_emissions-CH4_freight_marine[MtC/yr]",
                    "tra_emissions-CH4_freight_rail[MtC/yr]",
                    "tra_emissions-CH4_passenger_2W[MtC/yr]",
                    "tra_emissions-CH4_passenger_LDV[MtC/yr]",
                    "tra_emissions-CH4_passenger_aviation[MtC/yr]",
                    "tra_emissions-CH4_passenger_bus[MtC/yr]",
                    "tra_emissions-CH4_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-CH4_passenger_rail[MtC/yr]",
                    "tra_emissions-CO2_freight_HDV[MtC/yr]",
                    "tra_emissions-CO2_freight_IWW[MtC/yr]",
                    "tra_emissions-CO2_freight_aviation[MtC/yr]",
                    "tra_emissions-CO2_freight_marine[MtC/yr]",
                    "tra_emissions-CO2_freight_rail[MtC/yr]",
                    "tra_emissions-CO2_passenger_2W[MtC/yr]",
                    "tra_emissions-CO2_passenger_LDV[MtC/yr]",
                    "tra_emissions-CO2_passenger_aviation[MtC/yr]",
                    "tra_emissions-CO2_passenger_bus[MtC/yr]",
                    "tra_emissions-CO2_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-CO2_passenger_rail[MtC/yr]",
                    "tra_emissions-N2O_freight_HDV[MtC/yr]",
                    "tra_emissions-N2O_freight_IWW[MtC/yr]",
                    "tra_emissions-N2O_freight_aviation[MtC/yr]",
                    "tra_emissions-N2O_freight_marine[MtC/yr]",
                    "tra_emissions-N2O_freight_rail[MtC/yr]",
                    "tra_emissions-N2O_passenger_2W[MtC/yr]",
                    "tra_emissions-N2O_passenger_LDV[MtC/yr]",
                    "tra_emissions-N2O_passenger_aviation[MtC/yr]",
                    "tra_emissions-N2O_passenger_bus[MtC/yr]",
                    "tra_emissions-N2O_passenger_metro-tram[MtC/yr]",
                    "tra_emissions-N2O_passenger_rail[MtC/yr]"
                ]
            }
        },
        "string-input-1177:1266:444":{
            "type":"string",
            "default":"clm",
            "description":"Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example":"clm"
        },
        "string-input-1178:1211:1166:444":{
            "type":"string",
            "default":"cal_rate",
            "description":"Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example":"cal_rate"
        },
        "string-input-1177:1266:445":{
            "type":"string",
            "default":"cal_clm_(.*)\\[Mt\\]",
            "description":"Pattern selecting the group of calibration columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example":"cal_clm_(.*)\\[Mt\\]"
        },
        "single-selection-1177:1266:1150:659:661":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"PARALLEL_OP"
                }
            },
            "description":"Enter Description",
            "example":{
                "variable_value":"PARALLEL_OP"
            }
        },
        "column-filter-1177:1266:1150:652":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "string-input-1177:1266:446":{
            "type":"string",
            "default":"clm_(.*)\\[Mt\\]",
            "description":"Pattern selecting the group of columns to be calibrated. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example":"clm_(.*)\\[Mt\\]"
        },
        "string-input-1177:1591:357":{
            "type":"string",
            "default":"agr_emissions-..._(.*)\\[MtCO2e\\]*",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"agr_emissions-..._(.*)\\[MtCO2e\\]*"
        },
        "column-filter-1177:1536:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"tra_emissions-N2O_passenger_2W[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "tra_emissions-N2O_passenger_2W[MtCO2e]",
                    "tra_emissions-N2O_passenger_LDV[MtCO2e]",
                    "tra_emissions-N2O_passenger_rail[MtCO2e]",
                    "tra_emissions-N2O_passenger_bus[MtCO2e]",
                    "tra_emissions-N2O_passenger_metro-tram[MtCO2e]",
                    "tra_emissions-N2O_passenger_aviation[MtCO2e]",
                    "tra_emissions-CH4_passenger_2W[MtCO2e]",
                    "tra_emissions-CH4_passenger_LDV[MtCO2e]",
                    "tra_emissions-CH4_passenger_rail[MtCO2e]",
                    "tra_emissions-CH4_passenger_bus[MtCO2e]",
                    "tra_emissions-CH4_passenger_metro-tram[MtCO2e]",
                    "tra_emissions-CH4_passenger_aviation[MtCO2e]",
                    "tra_emissions-CO2_passenger_2W[MtCO2e]",
                    "tra_emissions-CO2_passenger_LDV[MtCO2e]",
                    "tra_emissions-CO2_passenger_rail[MtCO2e]",
                    "tra_emissions-CO2_passenger_bus[MtCO2e]",
                    "tra_emissions-CO2_passenger_metro-tram[MtCO2e]",
                    "tra_emissions-CO2_passenger_aviation[MtCO2e]",
                    "tra_emissions-N2O_freight_HDV[MtCO2e]",
                    "tra_emissions-N2O_freight_rail[MtCO2e]",
                    "tra_emissions-N2O_freight_IWW[MtCO2e]",
                    "tra_emissions-N2O_freight_marine[MtCO2e]",
                    "tra_emissions-N2O_freight_aviation[MtCO2e]",
                    "tra_emissions-CH4_freight_HDV[MtCO2e]",
                    "tra_emissions-CH4_freight_rail[MtCO2e]",
                    "tra_emissions-CH4_freight_IWW[MtCO2e]",
                    "tra_emissions-CH4_freight_marine[MtCO2e]",
                    "tra_emissions-CH4_freight_aviation[MtCO2e]",
                    "tra_emissions-CO2_freight_HDV[MtCO2e]",
                    "tra_emissions-CO2_freight_rail[MtCO2e]",
                    "tra_emissions-CO2_freight_IWW[MtCO2e]",
                    "tra_emissions-CO2_freight_marine[MtCO2e]",
                    "tra_emissions-CO2_freight_aviation[MtCO2e]"
                ]
            }
        },
        "single-selection-1177:1266:1150:653":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Java"
                }
            },
            "description":"Select code language to use",
            "example":{
                "variable_value":"Java"
            }
        },
        "double-input-1177:1588:1247":{
            "type":"number",
            "default":0.001,
            "description":"Enter Description",
            "example":0.001
        },
        "string-input-1177:1589:1246":{
            "type":"string",
            "default":"GtC",
            "description":"Enter Description",
            "example":"GtC"
        },
        "string-input-1177:1589:1245":{
            "type":"string",
            "default":".*\\[MtC\\].*",
            "description":"Enter Description",
            "example":".*\\[MtC\\].*"
        },
        "single-selection-539:408:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"2.1 Buildings"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"2.1 Buildings"
            }
        },
        "boolean-input-1178:1211:586":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation.",
            "example":true
        },
        "string-input-1177:1503:349":{
            "type":"string",
            "default":"amm_emissions-CO2e",
            "description":"Name of resulting column. The name will be appended with the unit (see below)",
            "example":"amm_emissions-CO2e"
        },
        "single-selection-1178:1211:463":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Product"
                }
            },
            "description":"Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example":{
                "variable_value":"Product"
            }
        },
        "single-selection-1178:1198:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"4.3 Agriculture"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"4.3 Agriculture"
            }
        },
        "single-selection-1177:1266:1151:463":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Subtraction 1-2"
                }
            },
            "description":"Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example":{
                "variable_value":"Subtraction 1-2"
            }
        },
        "column-filter-1177:1764:1743:1253":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array"
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                ]
            }
        },
        "string-input-1177:1503:354":{
            "type":"string",
            "default":"Mt",
            "description":"New unit for the output columns. Will be added to the name of the new column.",
            "example":"Mt"
        },
        "string-input-1178:1211:460":{
            "type":"string",
            "default":"unit",
            "description":"New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example":"unit"
        },
        "string-input-1177:1503:357":{
            "type":"string",
            "default":"amm_emissions-.*_ammonia\\[MtCO2e\\]",
            "description":"Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example":"amm_emissions-.*_ammonia\\[MtCO2e\\]"
        },
        "boolean-input-1177:1708:359":{
            "type":"boolean",
            "default":"true",
            "description":"Remove columns used in the calculation",
            "example":true
        },
        "string-input-1177:1708:349":{
            "type":"string",
            "default":"clm_emissions",
            "description":"Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example":"clm_emissions"
        },
        "single-selection-539:1187:394":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"4.3 Agriculture"
                }
            },
            "description":"Name of the linked module",
            "example":{
                "variable_value":"4.3 Agriculture"
            }
        },
        "single-selection-1177:1708:350":{
            "type":"object",
            "properties":{
                "variable_value":{
                    "type":"string",
                    "default":"Sum"
                }
            },
            "description":"Method used to combine columns.",
            "example":{
                "variable_value":"Sum"
            }
        },
        "column-filter-1177:1504:362":{
            "type":"object",
            "properties":{
                "columns":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "default":"fos_emissions-CO2[MtCO2e]"
                    }
                }
            },
            "description":"This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example":{
                "columns":[
                    "fos_emissions-CO2[MtCO2e]"
                ]
            }
        }
    }
}